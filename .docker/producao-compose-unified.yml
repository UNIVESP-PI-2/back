version: '3.8'

services:
  # ============ FRONTEND PRODUÇÃO ============
  frontend:
    image: ghcr.io/univesp-pi-2/frontend:latest
    container_name: prod-front-app
    restart: unless-stopped
    ports:
      - "3002:80"
    environment:
      - NODE_ENV=production
    networks:
      - prod-network-app
      - proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - backend

  # ============ BACKEND PRODUÇÃO ============
  backend:
    image: ghcr.io/univesp-pi-2/backend:latest
    container_name: prod-back-app
    restart: unless-stopped
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - DEBUG=false
      - DB_URI=${DB_URI}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=27017
      - DATABASE=${DATABASE}
      - JWT_SECRET=${JWT_SECRET}
      - HEADER_START=${HEADER_START}
      - APP_PORT=3000
    depends_on:
      - db
    networks:
      - prod-network-app
      - proxy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============ MONGODB PRODUÇÃO ============
  db:
    image: mongo:latest
    container_name: prod-back-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DATABASE}
    volumes:
      - prod-mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - prod-network-app
      - proxy-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  prod-network-app:
    external: true
  proxy-network:
    external: true

volumes:
  prod-mongo-data:
    external: true
